const ND=Symbol.for("proxserve_node_data"),NID=Symbol.for("proxserve_node_inherited_data");var NODE_STATUSES,PROXY_STATUSES,EVENTS;function realtypeof(variable){const rawType=Object.prototype.toString.call(variable);return rawType.substring(8,rawType.length-1)}function splitPath(path){if("string"!=typeof path||""===path)return[];let i=0,isBetweenBrackets=!1,isOnlyDigits=!1;"."===path[0]?i=1:"["===path[0]&&(i=1,isBetweenBrackets=!0,isOnlyDigits=!0);const resultsArr=[];let tmp="";for(;i<path.length;i++){const char=path[i];if(isBetweenBrackets)if("]"===char)isOnlyDigits?resultsArr.push(Number.parseInt(tmp,10)):resultsArr.push(tmp),isBetweenBrackets=!1,isOnlyDigits=!1,tmp="";else{if(isOnlyDigits){const code=char.charCodeAt(0);(code<48||code>57)&&(isOnlyDigits=!1)}tmp+=char}else"["===char&&(isBetweenBrackets=!0,isOnlyDigits=!0),"."===char||"["===char?""!==tmp&&(resultsArr.push(tmp),tmp=""):tmp+=char}return""!==tmp&&resultsArr.push(tmp),resultsArr}!function(NODE_STATUSES){NODE_STATUSES.active="active",NODE_STATUSES.stopped="stopped",NODE_STATUSES.blocked="blocked",NODE_STATUSES.splicing="splicing"}(NODE_STATUSES||(NODE_STATUSES={})),function(PROXY_STATUSES){PROXY_STATUSES.alive="alive",PROXY_STATUSES.deleted="deleted",PROXY_STATUSES.revoked="revoked"}(PROXY_STATUSES||(PROXY_STATUSES={})),function(EVENTS){EVENTS.create="create",EVENTS.update="update",EVENTS.delete="delete",EVENTS.splice="splice",EVENTS.shift="shift",EVENTS.unshift="unshift"}(EVENTS||(EVENTS={}));const stop=function(){this.dataNode[NID].status=NODE_STATUSES.stopped},block=function(){this.dataNode[NID].status=NODE_STATUSES.blocked},activate=function(force=!1){force||this.dataNode===this.metadata.dataTree?this.dataNode[NID].status=NODE_STATUSES.active:delete this.dataNode[NID].status},on=function(args){const{path:path="",listener:listener,id:id,deep:deep=!1,once:once=!1}=args;let{event:events}=args;"change"===events?events=Object.keys(EVENTS):Array.isArray(events)||(events=[events]);for(const event of events)if(!EVENTS[event]){const names=Object.keys(EVENTS);throw new Error(`${event} is not a valid event. valid events are ${names.join(",")}`)}let dataNode=this.dataNode;const segments=splitPath(path);for(const property of segments)dataNode[property]||createNodes(dataNode,property),dataNode=dataNode[property];let listenersPool=dataNode[ND].listeners.shallow;deep&&(listenersPool=dataNode[ND].listeners.deep);const listenerObj={type:events,once:once,func:listener};void 0!==id&&(listenerObj.id=id),listenersPool.push(listenerObj)},once=function(args){args.once=!0,on.call(this,args)};function removeById(listenersArr,id){for(let i=listenersArr.length-1;i>=0;i--){const listenerObj=listenersArr[i];(void 0!==id&&listenerObj.id===id||listenerObj.func===id)&&listenersArr.splice(i,1)}}const removeListener=function(args){const{id:id,path:path=""}=args,fullPath=`${this.dataNode[ND].path}${path}`;let dataNode=this.dataNode;const segments=splitPath(path);for(const property of segments){if(!dataNode[property])return void console.warn(`can't remove listener from a non-existent path '${fullPath}'`);dataNode=dataNode[property]}removeById(dataNode[ND].listeners.shallow,id),removeById(dataNode[ND].listeners.deep,id)},removeAllListeners=function(path=""){const fullPath=`${this.dataNode[ND].path}${path}`,segments=splitPath(path);let dataNode=this.dataNode;for(const property of segments){if(!dataNode[property])return void console.warn(`can't remove all listeners from a non-existent path '${fullPath}'`);dataNode=dataNode[property]}dataNode[ND].listeners.shallow=[],dataNode[ND].listeners.deep=[]},getOriginalTarget=function(){return this.proxyNode[ND].target},getProxserveName=function(){return this.dataNode[NID].name},whoami=function(){return this.dataNode[NID].name+this.dataNode[ND].path},getProxserveNodes=function(){return{dataNode:this.dataNode,proxyNode:this.proxyNode}};var pseudoMethods=Object.freeze({__proto__:null,activate:activate,block:block,getOriginalTarget:getOriginalTarget,getProxserveName:getProxserveName,getProxserveNodes:getProxserveNodes,on:on,once:once,removeAllListeners:removeAllListeners,removeListener:removeListener,stop:stop,whoami:whoami});function property2path(obj,property){if("symbol"==typeof property)throw new Error("property of type \"symbol\" isn't path'able");const typeofobj=realtypeof(obj);switch(typeofobj){case"Object":return`.${property}`;case"Array":return`[${property}]`;default:return console.warn(`Not Implemented (type of '${typeofobj}')`),property}}function createNodes(parentDataNode,property,parentProxyNode,target){let propertyPath;propertyPath=property2path({},property);let proxyNode,dataNode=parentDataNode[property];return dataNode||(dataNode={[NID]:Object.create(parentDataNode[NID]),[ND]:{parentNode:parentDataNode,listeners:{shallow:[],deep:[]}}},parentDataNode[property]=dataNode),delete dataNode[NID].status,parentDataNode[ND].isTreePrototype?Object.assign(dataNode[ND],{path:"",propertyPath:""}):Object.assign(dataNode[ND],{path:parentDataNode[ND].path+propertyPath,propertyPath:propertyPath}),proxyNode=void 0,{dataNode:dataNode,proxyNode:undefined}}const PSEUDO_METHODS_ALTERNATIVE_NAMING_PREFIX="$",pseudoMethodsNames=Object.keys(pseudoMethods);for(let i=pseudoMethodsNames.length-1;i>=0;i--){const synonym="$"+pseudoMethodsNames[i];pseudoMethodsNames.push(synonym)}